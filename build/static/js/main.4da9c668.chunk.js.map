{"version":3,"sources":["utils/notification.js","components/home/home.js","utils/auth.js","components/dashboard/dashboard.js","components/auth/register.js","components/auth/login.js","components/404.js","utils/publicRoute.js","utils/privateRoute.js","App.js","serviceWorker.js","index.js"],"names":["type","message","title","NotificationManager","info","success","warning","error","notifyMe","console","log","window","Notification","permission","body","icon","dir","requestPermission","alert","Home","style","padding","to","onClick","Component","isLogin","localStorage","getItem","logout","removeItem","Dashboard","_logout","axios","get","then","res","location","href","catch","err","response","this","Register","props","handleInputChange","event","name","target","setState","value","_register","state","username","email","password","confirm_password","length","post","data","status","className","onChange","placeholder","aria-describedby","Login","_login","setItem","for","id","PageNotFound","PublicRoute","component","restricted","rest","render","PrivateRoute","App","path","exact","React","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4da9c668.chunk.js","sourcesContent":["import 'react-notifications/lib/notifications.css';\r\nimport { NotificationManager } from 'react-notifications';\r\nexport default function (type, message, title) {\r\n    switch (type) {\r\n        case 'info':\r\n            NotificationManager.info(message, title, 3000);\r\n            break;\r\n        case 'success':\r\n            NotificationManager.success(message, title, 3000);\r\n            break;\r\n        case 'warning':\r\n            NotificationManager.warning(message, title, 3000);\r\n            break;\r\n        case 'error':\r\n            NotificationManager.error(message, title, 3000);\r\n            break;\r\n    }\r\n};\r\n\r\nexport function notifyMe() {\r\n    console.log('function call')\r\n    if (!(\"Notification\" in window)) {\r\n        alert(\"This browser does not support desktop notification\");\r\n    }\r\n    else if (Notification.permission === \"granted\") {\r\n        var options = {\r\n            body: \"This is the body of the notification\",\r\n            icon: \"icon.jpg\",\r\n            dir: \"ltr\"\r\n        };\r\n        var notification = new Notification(\"Hi there\", options);\r\n    }\r\n    else if (Notification.permission !== 'denied') {\r\n        Notification.requestPermission(function (permission) {\r\n            if (!('permission' in Notification)) {\r\n                Notification.permission = permission;\r\n            }\r\n\r\n            if (permission === \"granted\") {\r\n                var options = {\r\n                    body: \"This is the body of the notification\",\r\n                    icon: \"icon.jpg\",\r\n                    dir: \"ltr\"\r\n                };\r\n                var notification = new Notification(\"Hi there\", options);\r\n            }\r\n        });\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { notifyMe } from '../../utils/notification'\r\nexport default class Home extends Component {\r\n    // componentDidMount() {\r\n    //     setInterval(notifyMe, 5000)\r\n    // }\r\n    render() {\r\n        return (\r\n            <div style={{ padding: 20 }}>\r\n                <h1>Home</h1>\r\n                <NavLink to='/user/login'> <button>LogIn</button></NavLink><br /><br />\r\n                <button onClick={notifyMe}>Notify me!</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import axios from 'axios'\r\nlet TOKEN_KEY = 'token'\r\nexport const checkUser = () => {\r\n    axios.get('/user/check')\r\n        .then(res => {\r\n            localStorage.setItem(TOKEN_KEY, true);\r\n        }).catch(err => { localStorage.removeItem(TOKEN_KEY); })\r\n}\r\nexport const isLogin = () => {\r\n    if (localStorage.getItem(TOKEN_KEY)) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\nexport const login = () => {\r\n    localStorage.setItem(TOKEN_KEY, true);\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem(TOKEN_KEY);\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport { logout } from '../../utils/auth'\r\nexport default class Dashboard extends Component {\r\n    _logout = () => {\r\n        axios.get('/user/logout')\r\n            .then(res => {\r\n                logout()\r\n                window.location.href = '/user/login';\r\n            }).catch(err => { console.log('ERR', err.response) })\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ padding: 20 }}>\r\n                <h1>Dashboard</h1>\r\n                <button onClick={this._logout}>LogOut</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport '../../styles/login.css'\r\nimport axios from 'axios'\r\nimport { NotificationContainer } from 'react-notifications';\r\nimport Notification from '../../utils/notification'\r\nimport { NavLink } from 'react-router-dom'\r\nexport default class Register extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            confirm_password: '',\r\n        }\r\n    }\r\n\r\n    handleInputChange = event => {\r\n        const name = event.target.name;\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    }\r\n    _register = () => {\r\n        const { username, email, password, confirm_password } = this.state\r\n        if (username.length == 0 || email.length == 0 || password == 0 || confirm_password == 0) {\r\n            Notification('error', 'All fields are required', 'Not Empty')\r\n        } else {\r\n            axios.post('/user/register', this.state)\r\n                .then(res => {\r\n                    Notification('success', res.data.message, res.data.status)\r\n                    window.location.href = '/user/login';\r\n                }).catch(err => { Notification('error', err.response.data.message, err.response.data.status) })\r\n        }\r\n    }\r\n    render() {\r\n        const { username, email, password, confirm_password } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <div className='form'>\r\n                    <h2>Register</h2>\r\n                    <form>\r\n                        <input type=\"text\" value={username} name=\"username\" onChange={this.handleInputChange} className=\"form-control padding\" placeholder=\"Full Name\" />\r\n                        <input type=\"email\" value={email} name=\"email\" onChange={this.handleInputChange} className=\"form-control padding\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" />\r\n                        <input type=\"password\" value={password} name=\"password\" onChange={this.handleInputChange} className=\"form-control padding\" placeholder=\"Password\" />\r\n                        <input type=\"password\" value={confirm_password} name=\"confirm_password\" onChange={this.handleInputChange} className=\"form-control padding\" placeholder=\"Confirm Password\" />\r\n                        <button type=\"button\" onClick={this._register} className=\"btn btn-primary padding\">Register</button>\r\n                    </form>\r\n                    <NavLink to='/user/login'><p>I have an account</p></NavLink>\r\n                </div>\r\n                <NotificationContainer />\r\n            </div >\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport '../../styles/login.css'\r\nimport axios from 'axios'\r\nimport { NotificationContainer } from 'react-notifications';\r\nimport Notification from '../../utils/notification'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { login } from '../../utils/auth'\r\nexport default class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n        }\r\n    }\r\n\r\n    handleInputChange = event => {\r\n        const name = event.target.name;\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    }\r\n    _login = () => {\r\n        let { email, password } = this.state;\r\n        if (email.length == 0) {\r\n            Notification('error', 'Email is required', 'Email')\r\n        } else if (password.length == 0) {\r\n            Notification('error', 'Password is required', 'Password')\r\n        } else {\r\n            axios.post('/user/login', this.state)\r\n                .then(res => {\r\n                    login()\r\n                    window.location.href = '/dashboard';\r\n                }).catch(err => { Notification('error', 'Email or password wrong', err.response.status) })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <div className='form'>\r\n                    <h2>Login</h2>\r\n                    <form>\r\n                        <div className=\"form-group\">\r\n                            <label for=\"exampleInputEmail1\">Email address</label>\r\n                            <input type=\"email\" name=\"email\" className=\"form-control\" onChange={this.handleInputChange} aria-describedby=\"emailHelp\" placeholder=\"Enter email\" />\r\n                            <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label for=\"exampleInputPassword1\">Password</label>\r\n                            <input type=\"password\" name=\"password\" className=\"form-control\" onChange={this.handleInputChange} placeholder=\"Password\" />\r\n                        </div>\r\n                        <button type=\"button\" onClick={this._login} className=\"btn btn-primary\">Submit</button>\r\n                    </form>\r\n                    <NavLink to='/user/register'><p>Don't have account</p></NavLink>\r\n                </div>\r\n                <NotificationContainer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport '../styles/style.css'\r\nimport { NavLink } from 'react-router-dom'\r\nexport default class PageNotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"notfound\">\r\n                <div className=\"notfound\">\r\n                    <div className=\"notfound-404\">\r\n                        <h1>Oops!</h1>\r\n                    </div>\r\n                    <h2>404 - Page not found</h2>\r\n                    <p>The page you are looking for might have been removed had its name changed or is temporarily unavailable.</p>\r\n                    <NavLink to='/' className='navLink'>Go To Homepage</NavLink>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { isLogin } from './auth';\r\n\r\nconst PublicRoute = ({ component: Component, restricted, ...rest }) => {\r\n    return (\r\n        <Route {...rest} render={props => (\r\n            isLogin() && restricted ?\r\n                <Redirect to=\"/dashboard\" />\r\n                : <Component {...props} />\r\n        )} />\r\n    );\r\n};\r\n\r\nexport default PublicRoute;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { isLogin } from './auth';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n    // Show the component only when the user is logged in\r\n    // Otherwise, redirect the user to /signin page\r\n    return (\r\n        <Route {...rest} render={props => (\r\n            isLogin() ?\r\n                <Component {...props} />\r\n                : <Redirect to=\"/user/login\" />\r\n        )} />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from './components/home/home';\nimport Dashboard from './components/dashboard/dashboard';\nimport Register from './components/auth/register';\nimport Login from './components/auth/login';\nimport PageNotFound from './components/404';\nimport { checkUser } from './utils/auth';\nimport PublicRoute from './utils/publicRoute';\nimport PrivateRoute from './utils/privateRoute';\nclass App extends React.Component {\n  componentDidMount() {\n    checkUser()\n  }\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <PrivateRoute path=\"/dashboard\" exact component={Dashboard} />\n          <PublicRoute restricted={true} path=\"/user/register\" component={Register} />\n          <PublicRoute restricted={true} path=\"/user/login\" component={Login} />\n          <Route component={PageNotFound} />\n        </Switch>\n      </Router >\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        console.log('CALL')\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}